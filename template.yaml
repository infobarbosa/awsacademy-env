AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Este template CloudFormation cria uma infraestrutura básica na AWS, incluindo:
  - Uma VPC (Virtual Private Cloud) com suporte a DNS e nomes de host habilitados.
  - Uma Subnet pública dentro da VPC, localizada na zona de disponibilidade us-east-1a.
  - Um Internet Gateway para permitir a comunicação da VPC com a internet.
Parameters:
  KeyName:
    Description: Nome da chave SSH para acessar a instância EC2
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Deve ser o nome de uma chave SSH válida existente na sua conta da AWS.
    Default: vockey
  AZ:
    Description: Zona de disponibilidade para a Subnet
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
    AllowedValues:
      - us-east-1a
      - us-east-1b
      - us-east-1c
      - us-east-1d
      - us-east-1e
      - us-east-1f
  AMI:
    Description: ID da imagem da instância EC2
    Type: AWS::EC2::Image::Id
    Default: ami-068d56f572720958c
  InstanceType:
    Description: Tipo de instância EC2
    Type: String
    Default: t3.large
    AllowedValues:
      - t2.medium
      - t3.medium
      - t3.large
      - c4.large
      - c5.large
      - m4.large
      - m5.large
Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  MySubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: !Ref AZ
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MySubnet

  MyInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: MyRouteTable

  MyRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref MyInternetGateway

  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow HTTP and InfluxDB access
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 8086
          ToPort: 8086
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: MySecurityGroup

  MyEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      ImageId:  !Ref AMI
      AvailabilityZone: !Ref AZ
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: '0'
          SubnetId: !Ref MySubnet
          GroupSet:
            - !Ref MySecurityGroup
      Tags:
        - Key: Name
          Value: MyEC2Instance